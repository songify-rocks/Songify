<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="brw_ArtistBlocked" xml:space="preserve">
    <value>Artist is blocked</value>
    <comment>Header for the textbox when an artist is blocked</comment>
  </data>
  <data name="brw_FetchError" xml:space="preserve">
    <value>Error fetching songdata</value>
    <comment>Header for the textbox when an error occurred while fetching song info</comment>
  </data>
  <data name="brw_Header" xml:space="preserve">
    <value>Configure the bot responses for the following scenarios:</value>
    <comment>Header for the entire bot response configuration window</comment>
  </data>
  <data name="brw_MaxSongs" xml:space="preserve">
    <value>Max songs in queue</value>
    <comment>Header for the textbox when max amount of songs are reached per suer</comment>
  </data>
  <data name="brw_NoSong" xml:space="preserve">
    <value>No song has been specified (empty request)</value>
    <comment>Header for the textbox when no song was found</comment>
  </data>
  <data name="brw_SongInQueue" xml:space="preserve">
    <value>Song already in queue</value>
    <comment>Header for the textbox when the song is already in queue</comment>
  </data>
  <data name="brw_SongTooLong" xml:space="preserve">
    <value>Song too long</value>
    <comment>Header for the textbox when the song is too long</comment>
  </data>
  <data name="brw_Success" xml:space="preserve">
    <value>Song added successfully (command &amp; reward)</value>
    <comment>Header for the textbox when the song has been added successfully</comment>
  </data>
  <data name="bw_btnAdd" xml:space="preserve">
    <value>Add</value>
    <comment>Button content for the "Add" button on the blocklist window</comment>
  </data>
  <data name="bw_btnClear" xml:space="preserve">
    <value>Clear</value>
    <comment>Button content for the "Clear" button on the blocklist window</comment>
  </data>
  <data name="bw_cbArtist" xml:space="preserve">
    <value>Artist</value>
    <comment>Combobox item content for "Artist"</comment>
  </data>
  <data name="bw_cbUser" xml:space="preserve">
    <value>User</value>
    <comment>Combobox item content for "User"</comment>
  </data>
  <data name="bw_lblBlockedArtists" xml:space="preserve">
    <value>Blocked Artists</value>
    <comment>Label content for blocked artists</comment>
  </data>
  <data name="bw_lblBlockedUsers" xml:space="preserve">
    <value>Blocked Users</value>
    <comment>Label content for blocked users</comment>
  </data>
  <data name="bw_menu_Delete" xml:space="preserve">
    <value>Delete</value>
    <comment>Contextmenu button content for "Delete"</comment>
  </data>
  <data name="lang_deDE" xml:space="preserve">
    <value>German</value>
    <comment>Language name for "German"</comment>
  </data>
  <data name="lang_en" xml:space="preserve">
    <value>English</value>
    <comment>Language name for "English"</comment>
  </data>
  <data name="mw_menu_Blacklist" xml:space="preserve">
    <value>Blocklist</value>
    <comment>Menu content for "Blocklist"</comment>
  </data>
  <data name="mw_menu_Connect" xml:space="preserve">
    <value>Connect</value>
    <comment>Menu content for "Connect"</comment>
  </data>
  <data name="mw_menu_Disconnect" xml:space="preserve">
    <value>Disconnect</value>
    <comment>Menu content for "Disconnect"</comment>
  </data>
  <data name="mw_menu_Exit" xml:space="preserve">
    <value>Exit</value>
    <comment>Menu content for "Exit"</comment>
  </data>
  <data name="mw_menu_File" xml:space="preserve">
    <value>File</value>
    <comment>Menu content for "File"</comment>
  </data>
  <data name="mw_menu_Help" xml:space="preserve">
    <value>Help</value>
    <comment>Menu content for "Help"</comment>
  </data>
  <data name="mw_menu_Help_About" xml:space="preserve">
    <value>About</value>
    <comment>Menu content for "About"</comment>
  </data>
  <data name="mw_menu_History" xml:space="preserve">
    <value>History</value>
    <comment>Menu content for "History"</comment>
  </data>
  <data name="mw_menu_History_Browser" xml:space="preserve">
    <value>History Browser</value>
    <comment>Menu content for "History Browser"</comment>
  </data>
  <data name="mw_menu_History_Window" xml:space="preserve">
    <value>History Window</value>
    <comment>Menu content for "History Window"</comment>
  </data>
  <data name="mw_menu_Queue" xml:space="preserve">
    <value>Queue</value>
    <comment>Menu content for "Queue"</comment>
  </data>
  <data name="mw_menu_Queue_Browser" xml:space="preserve">
    <value>Queue Browser</value>
    <comment>Menu content for "Queue Browser"</comment>
  </data>
  <data name="mw_menu_Queue_Clear" xml:space="preserve">
    <value>Clear Queue</value>
    <comment>Menu content for "Clear Queue"</comment>
  </data>
  <data name="mw_menu_Queue_Window" xml:space="preserve">
    <value>Queue Window</value>
    <comment>Menu content for "Queue Window"</comment>
  </data>
  <data name="mw_menu_Settings" xml:space="preserve">
    <value>Settings</value>
    <comment>Menu content for "Settings"</comment>
  </data>
  <data name="mw_menu_Support" xml:space="preserve">
    <value>Support Us</value>
    <comment>Menu content for "Support Us" (unused)</comment>
  </data>
  <data name="mw_menu_Widget" xml:space="preserve">
    <value>Widget</value>
    <comment>Menu content for "Widget"</comment>
  </data>
  <data name="sw_Appearance_Color" xml:space="preserve">
    <value>Color:</value>
    <comment>Label content for "Color"</comment>
  </data>
  <data name="sw_Appearance_ThemeDark" xml:space="preserve">
    <value>Dark Theme</value>
    <comment>Toggleswitch content for "Dark Theme"</comment>
  </data>
  <data name="sw_Appearance_ThemeLight" xml:space="preserve">
    <value>Light Theme</value>
    <comment>Toggleswitch content for "Light Theme"</comment>
  </data>
  <data name="sw_Config_Export" xml:space="preserve">
    <value>EXPORT CONFIG</value>
    <comment>Button content for "Export Config"</comment>
  </data>
  <data name="sw_Config_Import" xml:space="preserve">
    <value>IMPORT CONFIG</value>
    <comment>Button content for "Import Config"</comment>
  </data>
  <data name="sw_Integration_Autoconnect" xml:space="preserve">
    <value>Autoconnect</value>
    <comment>Toggleswitch content for "auto connect"</comment>
  </data>
  <data name="sw_Integration_btnLink" xml:space="preserve">
    <value>LINK</value>
    <comment>Button content for "Link"</comment>
  </data>
  <data name="sw_Integration_ConfigureResponses" xml:space="preserve">
    <value>Configure bot responses &amp; commands</value>
    <comment>Button content for "Configure Bot Responses &amp; Commands"</comment>
  </data>
  <data name="sw_Integration_NBWatermark" xml:space="preserve">
    <value>NB Username (Twitch Username)</value>
    <comment>Watermark for Nightbot Username (deprecated, unused)</comment>
  </data>
  <data name="sw_Integration_SpotifyLinked" xml:space="preserve">
    <value>Linked account:</value>
    <comment>Label content for "Linked account:"</comment>
  </data>
  <data name="sw_Integration_TwitchChWatermark" xml:space="preserve">
    <value>Channel to join</value>
    <comment>Label content for "Channel to join"</comment>
  </data>
  <data name="sw_SpotifySR_ChannelPoints" xml:space="preserve">
    <value>Channel points reward id</value>
    <comment>Label content for "Channel Points Reward ID"</comment>
  </data>
  <data name="sw_SpotifySR_ClearQ" xml:space="preserve">
    <value>Clear queue on startup</value>
    <comment>Toggleswitch content for "Clear queue on startup"</comment>
  </data>
  <data name="sw_SpotifySR_CommandCD" xml:space="preserve">
    <value>Global command cooldown (seconds)</value>
    <comment>Label content for "Command cooldown (seconds)"</comment>
  </data>
  <data name="sw_SpotifySR_MaxLength" xml:space="preserve">
    <value>Max song length (in minutes)</value>
    <comment>Label content for "Max song length (in minutes)"</comment>
  </data>
  <data name="sw_SpotifySR_MaxReq" xml:space="preserve">
    <value>Max requests per user</value>
    <comment>Label content for "Max Requests per user"</comment>
  </data>
  <data name="sw_SpotifySR_MessageLogging" xml:space="preserve">
    <value>Enable message logging</value>
    <comment>Checkbox content for "Enable message logging) (unused as of 1.3.9)</comment>
  </data>
  <data name="sw_SpotifySR_SRCommand" xml:space="preserve">
    <value>Command for making song requests. (Command + Spotify Link or Artist - Title)</value>
    <comment>Toggleswitch content for "Enable SR (Command)"</comment>
  </data>
  <data name="sw_SpotifySR_SRReward" xml:space="preserve">
    <value>Enable SR (Channel Rewards)</value>
    <comment>Toggleswitch content for "Enable SR (Channel Reward)"</comment>
  </data>
  <data name="sw_tcOutput_AddSpaces" xml:space="preserve">
    <value>Append spaces</value>
    <comment>Checkbox content for "append spaces"</comment>
  </data>
  <data name="sw_tcOutput_Directory" xml:space="preserve">
    <value>Output directory</value>
    <comment>Label content for "Output Directory"</comment>
  </data>
  <data name="sw_tcOutput_DownloadAlbum" xml:space="preserve">
    <value>Download album cover (only works with API)</value>
    <comment>Toggleswitch content for "Download album cover (only works with API)"</comment>
  </data>
  <data name="sw_tcOutput_Format" xml:space="preserve">
    <value>Output format (Text file &amp; Widget)</value>
    <comment>Label content for "Output Format (Text file &amp; Widget)</comment>
  </data>
  <data name="sw_tcOutput_PauseText" xml:space="preserve">
    <value>Pause text</value>
    <comment>Toggleswitch content for "Pause Text"</comment>
  </data>
  <data name="sw_tcOutput_PauseWatermark" xml:space="preserve">
    <value>Custom pause text (blank for empty text file)</value>
    <comment>Watermark content for the pause text textbox</comment>
  </data>
  <data name="sw_tcOutput_SplitArtist" xml:space="preserve">
    <value>Split artist, title and requester</value>
    <comment>Toggleswitch content for "Split Artist and Title"</comment>
  </data>
  <data name="sw_tcOutput_UploadSongInfo" xml:space="preserve">
    <value>Upload song info</value>
    <comment>Toggleswitch content for "Upload song info"</comment>
  </data>
  <data name="sw_tcSpotify_SaveButton" xml:space="preserve">
    <value>Save</value>
    <comment>(unused)</comment>
  </data>
  <data name="sw_tcSpotify_UseOwnApp" xml:space="preserve">
    <value>Use own Spotify app</value>
    <comment>Toggleswitch content for "Use Own AppID"</comment>
  </data>
  <data name="sw_tcSystem_Autostart" xml:space="preserve">
    <value>Autostart with windows</value>
    <comment>Toggleswitch content for "autostart with windows"</comment>
  </data>
  <data name="sw_tcSystem_Behavior" xml:space="preserve">
    <value>Behavior</value>
    <comment>Label content for "Behavior"</comment>
  </data>
  <data name="sw_tcSystem_CheckButton" xml:space="preserve">
    <value>CHECK FOR UPDATES</value>
    <comment>Button content for "check for updates" (unused)</comment>
  </data>
  <data name="sw_tcSystem_ChromeFetchRate" xml:space="preserve">
    <value>Chrome fetch rate (seconds)</value>
    <comment>Label content for "Chrome fetch rate (seconds)"</comment>
  </data>
  <data name="sw_tcSystem_Minimize" xml:space="preserve">
    <value>Minimize to system tray</value>
    <comment>Toggleswitch content for "minimize to system tray"</comment>
  </data>
  <data name="sw_tcSystem_SendAnonData" xml:space="preserve">
    <value>Send anonymous data</value>
    <comment>Toggleswitch content for "send anonymous data" (unused)</comment>
  </data>
  <data name="sw_tcSystem_Telemetry" xml:space="preserve">
    <value>Telemetry</value>
    <comment>(unused)</comment>
  </data>
  <data name="sw_tc_Appearance" xml:space="preserve">
    <value>Appearance</value>
    <comment>Label content for "Appearance"</comment>
  </data>
  <data name="sw_tc_Config" xml:space="preserve">
    <value>Config</value>
    <comment>Tabcontrol header content for "Config"</comment>
  </data>
  <data name="sw_tc_Integration" xml:space="preserve">
    <value>Twitch</value>
    <comment>Tabcontrol header content for "Twitch"</comment>
  </data>
  <data name="sw_tc_Output" xml:space="preserve">
    <value>Output</value>
    <comment>Tabcontrol header content for "Output"</comment>
  </data>
  <data name="sw_tc_System" xml:space="preserve">
    <value>System</value>
    <comment>Tabcontrol header content for "System"</comment>
  </data>
  <data name="lang_ru" xml:space="preserve">
    <value>Russian</value>
    <comment>Langauge name for "Russian"</comment>
  </data>
  <data name="sw_tcSpotify_UseSongifyApp" xml:space="preserve">
    <value>Use Songify's Spotify app</value>
    <comment>Toggleswitch content for "Use Songify AppID"</comment>
  </data>
  <data name="mw_menu_Twitch_Bot" xml:space="preserve">
    <value>Bot config</value>
    <comment>Menu content for "Bot Config"</comment>
  </data>
  <data name="lang_es" xml:space="preserve">
    <value>Spanish</value>
    <comment>Language name for "Spanish"</comment>
  </data>
  <data name="lang_fr" xml:space="preserve">
    <value>French</value>
    <comment>Language name for "French"</comment>
  </data>
  <data name="sw_tcSystem_translated" xml:space="preserve">
    <value>(translated using DeepL)</value>
    <comment>Label content for "(translated using DeepL)"</comment>
  </data>
  <data name="brw_cmd_next" xml:space="preserve">
    <value>Displays the next song in queue</value>
    <comment>Label content for "Displays the next song in queue"</comment>
  </data>
  <data name="brw_cmd_off" xml:space="preserve">
    <value>Off</value>
    <comment>Toggleswitch content for "Off"</comment>
  </data>
  <data name="brw_cmd_on" xml:space="preserve">
    <value>On</value>
    <comment>Toggleswitch content for "On"</comment>
  </data>
  <data name="brw_cmd_pos" xml:space="preserve">
    <value>Displays the queue position of the users songrequests</value>
    <comment>Label content for "Displays the queue position of the users song requests"</comment>
  </data>
  <data name="brw_cmd_song" xml:space="preserve">
    <value>Displays the current song</value>
    <comment>Label content for "Displays the current song"</comment>
  </data>
  <data name="brw_cmd_description" xml:space="preserve">
    <value>Description</value>
    <comment>Label content for "Description"</comment>
  </data>
  <data name="brw_cmd_enabled" xml:space="preserve">
    <value>Enabled</value>
    <comment>Label content for "Enabled"</comment>
  </data>
  <data name="brw_cmd_trigger" xml:space="preserve">
    <value>Trigger</value>
    <comment>Label content for "Trigger"</comment>
  </data>
  <data name="sw_tcOutput_Format2" xml:space="preserve">
    <value>Output format (Twitch Chat)</value>
    <comment>Label content for "Output Format (Twitch Chat)"</comment>
  </data>
  <data name="crw_CreateReward" xml:space="preserve">
    <value>Create reward</value>
    <comment>Button content for "Create Reward"</comment>
  </data>
  <data name="crw_RewardTitle" xml:space="preserve">
    <value>Title</value>
    <comment>Label content for "Title"</comment>
  </data>
  <data name="crw_RewardPrompt" xml:space="preserve">
    <value>Prompt</value>
    <comment>Label content for "Prompt"</comment>
  </data>
  <data name="crw_RewardCost" xml:space="preserve">
    <value>Cost</value>
    <comment>Label content for "Cost"</comment>
  </data>
  <data name="crw_CreateRewardError" xml:space="preserve">
    <value>There was an issue creating the reward. Make sure you don't have a reward with the same name already.</value>
    <comment>Label content for "There was an issue creating the reward. Make sure you don't have a reward with the same name already."</comment>
  </data>
  <data name="crw_CreateRewardSuccess" xml:space="preserve">
    <value>The reward "{name}" has been created.</value>
    <comment>Label content for "The reward "{name}" has been created."</comment>
  </data>
  <data name="mw_menu_PatchNotes" xml:space="preserve">
    <value>Patch notes</value>
    <comment>MenuItem content for "Patch notes"</comment>
  </data>
  <data name="mw_menu_Help_LogFolder" xml:space="preserve">
    <value>Log-folder</value>
    <comment>MenuItem content for "Log Folder"</comment>
  </data>
  <data name="mw_menu_Twitch_TwitchLogin" xml:space="preserve">
    <value>Login with Twitch</value>
    <comment>MenuItem content for "Login with Twitch"</comment>
  </data>
  <data name="mw_menu_Console" xml:space="preserve">
    <value>Console</value>
    <comment>MenuItem content for "Console"</comment>
  </data>
  <data name="brw_cmd_skip" xml:space="preserve">
    <value>Skips the current song</value>
    <comment>Label content for "Skips the current song (Broadcaster / Mod / Requester)"</comment>
  </data>
  <data name="brw_cmd_skipvote" xml:space="preserve">
    <value>Starts a vote to skip the current song</value>
    <comment>Label content for "Starts a vote to skip the current song"</comment>
  </data>
  <data name="brw_cmd_skipvotecount" xml:space="preserve">
    <value>Number of votes needed</value>
    <comment>Label content for "Number of votes needed"</comment>
  </data>
  <data name="sw_WebServer_Port" xml:space="preserve">
    <value>Web server port</value>
    <comment>Label content for Web Server Port</comment>
  </data>
  <data name="sw_WebServer_StartWebServer" xml:space="preserve">
    <value>Start web server</value>
    <comment>Button content for "Start Web Server"</comment>
  </data>
  <data name="sw_WebServer_OpenWebsite" xml:space="preserve">
    <value>Open website</value>
    <comment>Button content for "Open Website"</comment>
  </data>
  <data name="Sw_System_Privacy" xml:space="preserve">
    <value>Hide account names and profile pictures</value>
    <comment>ToggleSwitch Content for "Display account names and profile pictures"</comment>
  </data>
  <data name="Sw_System_OpenQueueOnStartup" xml:space="preserve">
    <value>Open queue window on startup</value>
    <comment>ToggleSwitch content for "open queue window on startup"</comment>
  </data>
  <data name="Sw_intergration_AutoAnnounce" xml:space="preserve">
    <value>Automatically announce song to chat (uses the !song response)</value>
    <comment>TollgeSwitch content for "Automatically Announce Song To Chat"</comment>
  </data>
  <data name="Sw_Integration_OnlyWorkWhenLive" xml:space="preserve">
    <value>Limit Twitch activity to only work when stream is live (needs Twitch login)</value>
    <comment>ToggleSwitch content for "Limit Twitch activity to only work when stream is live (needs Twitch login)"</comment>
  </data>
  <data name="Sw_Integration_ManageRewards" xml:space="preserve">
    <value>Manage rewards</value>
    <comment>Button content for "Manage Rewards"</comment>
  </data>
  <data name="Sw_Integration_MaxSrUser" xml:space="preserve">
    <value>Max SR / User (based on user level)</value>
  </data>
  <data name="Sw_Integration_RefundOn" xml:space="preserve">
    <value>Refund when</value>
    <comment>Label content for "Refund when"</comment>
  </data>
  <data name="Sw_Integration_RefundUserLevelLow" xml:space="preserve">
    <value>User level is too low</value>
    <comment>Checkbox content for "User level is too low"</comment>
  </data>
  <data name="Sw_Integration_RefundUSerBlocked" xml:space="preserve">
    <value>User is blocked from SR</value>
    <comment>Checkbox content for "User is blocked from SR"</comment>
  </data>
  <data name="Sw_Integration_RefundSpotifyNotConnected" xml:space="preserve">
    <value>Spotify is not connected</value>
  </data>
  <data name="Sw_Integration_RefundSongNotAvailable" xml:space="preserve">
    <value>Song is not available in region</value>
  </data>
  <data name="Sw_Integration_RefundArtistBlocked" xml:space="preserve">
    <value>Song contains blocked artist(s)</value>
  </data>
  <data name="Sw_Integration_RefundSongTooLong" xml:space="preserve">
    <value>Song duration is too long</value>
  </data>
  <data name="Sw_Integration_RefundSongAlreadyInQueue" xml:space="preserve">
    <value>Song is already in queue</value>
  </data>
  <data name="Sw_Integration_RefundNoSongFound" xml:space="preserve">
    <value>No song was found</value>
  </data>
  <data name="Sw_Integration_RefundSongAdded" xml:space="preserve">
    <value>Song has been added to the queue</value>
  </data>
  <data name="Sw_Integration_RefundAlways" xml:space="preserve">
    <value>always (make SR free)</value>
  </data>
  <data name="Sw_Integtation_Tc_Accounts" xml:space="preserve">
    <value>Accounts</value>
    <comment>TabControl header content for "Accoutns"</comment>
  </data>
  <data name="Sw_Integtation_Tc_Rewards" xml:space="preserve">
    <value>Rewards</value>
    <comment>TabControl header content for  "Rewards"</comment>
  </data>
  <data name="Sw_Integtation_Tc_SongRequests" xml:space="preserve">
    <value>Song Requests</value>
    <comment>TabControl header content for "Song Requests"</comment>
  </data>
  <data name="mw_menu_Twitch_TwitchLoggedIn" xml:space="preserve">
    <value>Logged in with Twitch</value>
    <comment>MenuItem content for when logged in with Twitch</comment>
  </data>
  <data name="Sw_SpotifySR_UnlimitedSRs" xml:space="preserve">
    <value>Unlimited song requests</value>
    <comment>ToggleSwitch Content for "unlimited song requests"</comment>
  </data>
  <data name="mw_menu_SongRequests" xml:space="preserve">
    <value>Song Requests</value>
    <comment>Menu Header for "Song Requests"</comment>
  </data>
  <data name="mw_menu_View" xml:space="preserve">
    <value>View</value>
    <comment>Menu Header for "View"</comment>
  </data>
  <data name="mw_menu_BuyUsACoffee" xml:space="preserve">
    <value>Support us on Ko-Fi!</value>
    <comment>Menu Header for "Buy Us A Coffee"</comment>
  </data>
  <data name="mw_LiveOutputPlaceholder" xml:space="preserve">
    <value>Artist - Title</value>
    <comment>Textblock placeholder "Artist - Title"</comment>
  </data>
  <data name="mw_menu_Twitch_CheckOnlineStatus" xml:space="preserve">
    <value>Check online status</value>
    <comment>MenuItem Header fro "Check Online Status" in Twitch</comment>
  </data>
  <data name="WinTitle_Queue" xml:space="preserve">
    <value>Song queue</value>
    <comment>Window Title for the Queue Window</comment>
  </data>
  <data name="s_Length" xml:space="preserve">
    <value>Length</value>
    <comment>The word "Length"</comment>
  </data>
  <data name="s_Requester" xml:space="preserve">
    <value>Requester</value>
    <comment>The word "Requester"</comment>
  </data>
  <data name="WinTitle_Blocklist" xml:space="preserve">
    <value>Blacklist</value>
    <comment>The window title for the Blocklist Window</comment>
  </data>
  <data name="WinTitle_History" xml:space="preserve">
    <value>Song history</value>
    <comment>Window Title for the History Window</comment>
  </data>
  <data name="Sw_System_PrivacyHeader" xml:space="preserve">
    <value>Privacy</value>
    <comment>The word "Privacy"</comment>
  </data>
  <data name="sw_tc_WebServer" xml:space="preserve">
    <value>Web server</value>
  </data>
  <data name="sw_WebServer_AutoStart" xml:space="preserve">
    <value>Automatically start the web server</value>
    <comment>Toggleswitch content for "Automatically start the web server"</comment>
  </data>
  <data name="sw_Config_ResetConfig" xml:space="preserve">
    <value>Reset config</value>
    <comment>Button content for "Reset Config"</comment>
  </data>
  <data name="sw_WebServer_StopWebServer" xml:space="preserve">
    <value>Stop web server</value>
    <comment>Button content for "Stop Web Server"</comment>
  </data>
  <data name="sw_Config_GetBetaUpdates" xml:space="preserve">
    <value>Get beta updates</value>
    <comment>Toggleswitch Content for "get beta updates"</comment>
  </data>
  <data name="mw_LiveOutputLinkSpotify" xml:space="preserve">
    <value>Please link your Spotify account. Settings -&gt; Spotify</value>
    <comment>Textblock content for "Please link your Spotify account Settings -&gt; Spotify"</comment>
  </data>
  <data name="s_Save" xml:space="preserve">
    <value>Save</value>
    <comment>The word "Save" as in to save in file</comment>
  </data>
  <data name="s_Upload" xml:space="preserve">
    <value>Upload</value>
    <comment>The word "Upload" as in to upload to the server</comment>
  </data>
  <data name="s_Name" xml:space="preserve">
    <value>Name</value>
    <comment>The word "Name" as in name of the song (Artist + Title)</comment>
  </data>
  <data name="s_Time" xml:space="preserve">
    <value>Time</value>
    <comment>The word "Time" as in when the song was played (history)</comment>
  </data>
  <data name="sw_Twitch_Rewards_CreateNewReward" xml:space="preserve">
    <value>Create new reward</value>
    <comment>Button content for "Create New Reward"</comment>
  </data>
  <data name="brw_ModSkip" xml:space="preserve">
    <value>Broadcaster / Moderator / Requester skipped the song</value>
    <comment>Header for the textbox when the Broadcaster / Mod / Requester skipped the song</comment>
  </data>
  <data name="brw_Pos" xml:space="preserve">
    <value>Response for !pos command</value>
    <comment>Header for the textbox when the !pos command has been executed</comment>
  </data>
  <data name="brw_Next" xml:space="preserve">
    <value>Response for !next command</value>
    <comment>Header for the textbox when !next hast been executed</comment>
  </data>
  <data name="WinTitle_BotResponsesCommands" xml:space="preserve">
    <value>Bot Responses &amp; Commands</value>
    <comment>Window Title for the Bot Responses and Commands window</comment>
  </data>
  <data name="brw_tc_Responses" xml:space="preserve">
    <value>Responses</value>
    <comment>Tabcontrol Header for "Responses" (Bot response window)</comment>
  </data>
  <data name="brw_tc_Commands" xml:space="preserve">
    <value>Commands</value>
    <comment>TabControl Header for "Commands" (Bot Responses Window)</comment>
  </data>
  <data name="brw_VoteSkip" xml:space="preserve">
    <value>User voted to skip the current song</value>
    <comment>Header for the textbox when the !voteskip command has been executed</comment>
  </data>
  <data name="sw_Spotify_RewardSR" xml:space="preserve">
    <value>Reward for Song Requests</value>
    <comment>Label content for "Reward for Song Request"</comment>
  </data>
  <data name="sw_Spotify_RewardSkip" xml:space="preserve">
    <value>Reward for Song Skip</value>
  </data>
  <data name="sw_SpotifySR_SsrMovedToBotConfig" xml:space="preserve">
    <value>!ssr command moved to bot config</value>
    <comment>Label that states "!ssr command moved to bot config"@MutedRule(PunctuationLead)</comment>
  </data>
  <data name="Sw_Integration_MinUserLevel" xml:space="preserve">
    <value>Minimum user level required for SR</value>
    <comment>Label for "Minum user level required for SR"</comment>
  </data>
  <data name="sw_Integration_Twitch" xml:space="preserve">
    <value>Twitch account</value>
    <comment>Label for "Twitch Account" (without colon)</comment>
  </data>
  <data name="sw_Twitch_LogOut" xml:space="preserve">
    <value>Logout</value>
    <comment>The word logout as in "log out of twitch"</comment>
  </data>
  <data name="sw_Integration_RefundDisclaimer" xml:space="preserve">
    <value>In order to be able to refund points, the reward has to be created through Songify. Select a reward that is manageable or create a new one.</value>
    <comment>Short disclaimer that hides Refund Conditions if the Reward is not managaeable by Songify.</comment>
  </data>
  <data name="msgbx_BotAccount" xml:space="preserve">
    <value>Bot Account</value>
    <comment>Messagebox Header that says "Bot Account"</comment>
  </data>
  <data name="msgbx_UseAsBotAccount" xml:space="preserve">
    <value>Successfully linked to {account}. Would you also like to use this account as the chat bot?</value>
    <comment>Text that displays after linking to twitch that asks if this accoutn should also be used as the bot account</comment>
  </data>
  <data name="msgbx_Yes" xml:space="preserve">
    <value>Yes</value>
    <comment>The word "Yes" on a messagebox as in Yes/Confirm/Affirmative</comment>
  </data>
  <data name="msgbx_No" xml:space="preserve">
    <value>No</value>
    <comment>The word "No" in a MessageBox Button as in No/Negaitve/Decline</comment>
  </data>
  <data name="Sw_Integration_StreamNotLifeNotification" xml:space="preserve">
    <value>Send offline notification to chat</value>
    <comment>Header for the ToggleSwtich to send a message to chat if the stream is not live and a command has been used</comment>
  </data>
  <data name="brw_Song" xml:space="preserve">
    <value>Response for !song command</value>
    <comment>Label content "Response for !song command"</comment>
  </data>
  <data name="brw_Refund" xml:space="preserve">
    <value>Text that gets added to the response if points are refunded</value>
    <comment>Title for the text field</comment>
  </data>
  <data name="sw_tcSystem_lblLanguage" xml:space="preserve">
    <value>Language</value>
    <comment>Label that says "Language"</comment>
  </data>
  <data name="brw_cmd_remove" xml:space="preserve">
    <value>Removes the latest song request of the user.</value>
  </data>
  <data name="brw_SongLike" xml:space="preserve">
    <value>Response for !songlike command</value>
    <comment>Lable for the !songlike command</comment>
  </data>
  <data name="brw_cmd_songlike" xml:space="preserve">
    <value>Adds the current song to the playlist selected in Spotify config.</value>
    <comment>Comman description</comment>
  </data>
  <data name="brw_cmd_play" xml:space="preserve">
    <value>Resumes the current playback.</value>
  </data>
  <data name="sw_SpotifySR_Userlevel_command" xml:space="preserve">
    <value>Allowed user levels for SR command</value>
  </data>
  <data name="sw_SpotifySR_Userlevel_reward" xml:space="preserve">
    <value>Allowed user levels for SR reward</value>
  </data>
  <data name="sw_tcSpotify_SongLikeLabel" xml:space="preserve">
    <value>Liked Songs Playlist</value>
  </data>
  <data name="sw_tcSpotify_SongLikeLabelTooltip" xml:space="preserve">
    <value>The playlist that songs get added when using the !songlike command or with the option to automatically add songs to the playlist.</value>
  </data>
  <data name="sw_tc_Spotify_AddSongsToPlaylist" xml:space="preserve">
    <value>Add all song requests to the playlist</value>
  </data>
  <data name="brw_SongNotFoundInPlaylist" xml:space="preserve">
    <value>Response when the song was not found in the allowed songs playlist</value>
    <comment>Response when the song was not found in the allowed songs playlist</comment>
  </data>
  <data name="brw_Remove" xml:space="preserve">
    <value>Response for !remove command</value>
    <comment>Response for !remove</comment>
  </data>
  <data name="lang_pl" xml:space="preserve">
    <value>Polish</value>
    <comment>Language name for "Polish"</comment>
  </data>
  <data name="lang_pt" xml:space="preserve">
    <value>Portuguese</value>
    <comment>Language name for "Portuguese"</comment>
  </data>
  <data name="sw_Integration_ShowCreds" xml:space="preserve">
    <value>Show Credentials</value>
  </data>
  <data name="sw_tc_Spotify_OnlyAllowFromPlaylist" xml:space="preserve">
    <value>Allow only songs from this playlist (SR)</value>
  </data>
  <data name="sw_SpotifySR_BlockAllExplicit" xml:space="preserve">
    <value>Block all explicit songs</value>
  </data>
  <data name="brw_ExplicitSongs" xml:space="preserve">
    <value>Response when an explicit song has been requested and 'block explicit songs' is turned on</value>
  </data>
  <data name="sw_tcOutput_RequesterPrefix" xml:space="preserve">
    <value>Requester text prefix</value>
  </data>
  <data name="lang_it" xml:space="preserve">
    <value>Italian</value>
    <comment>Language name for "Italian"</comment>
  </data>
  <data name="sw_tcSystem_UseDefaultBrowser" xml:space="preserve">
    <value>Use default web browser</value>
    <comment>Use Default Web Browser</comment>
  </data>
  <data name="brw_CommandOnCooldown" xml:space="preserve">
    <value>Response when the sr command is on cooldown</value>
    <comment>Command on Cooldown Response</comment>
  </data>
  <data name="brw_NoTrackFound" xml:space="preserve">
    <value>Response when no track was found</value>
    <comment>No Track Found response</comment>
  </data>
  <data name="brw_cmd_vol" xml:space="preserve">
    <value>Returns the current volume or sets it. '!vol [0-100]'</value>
  </data>
  <data name="lang_br" xml:space="preserve">
    <value>Brazilian Portuguese</value>
    <comment>Language name for "Brazilian Portuguese"</comment>
  </data>
  <data name="brw_cmd_volIgnoreMod" xml:space="preserve">
    <value>Ignore Broadcaster / Moderator check</value>
  </data>
  <data name="mw_menu_CheckUpdates" xml:space="preserve">
    <value>Check For Updates</value>
  </data>
  <data name="sw_tcOutput_ApplyToSplitFilesToo" xml:space="preserve">
    <value>Apply to split files too</value>
    <comment>Append spaves to split files too</comment>
  </data>
  <data name="sw_tcOutput_onPause_DoNothing" xml:space="preserve">
    <value>Do Nothing</value>
  </data>
  <data name="sw_tcOutput_onPause_UseCustomPauseText" xml:space="preserve">
    <value>Use Custom Pause Text</value>
  </data>
  <data name="sw_tcOutput_onPause_ClearAllOutput" xml:space="preserve">
    <value>Clear All Output</value>
  </data>
  <data name="sw_rewards_ClickReminder" xml:space="preserve">
    <value>Click here after selecting the reward</value>
  </data>
  <data name="sw_rewards_enabledRewards" xml:space="preserve">
    <value>Enabled Rewards for Songrequests</value>
  </data>
  <data name="brw_cmd_QueueReturn" xml:space="preserve">
    <value>Returns the first 5 songs of the current playback queue</value>
  </data>
  <data name="sw_SpotifySR_CommandCDUser" xml:space="preserve">
    <value>SR Command Cooldown (per user)</value>
  </data>
  <data name="brw_CommandOnUserCooldown" xml:space="preserve">
    <value>Response when the User is on cooldown (per user sr command cooldown)</value>
  </data>
  <data name="Sw_System_DisableDonationReminder" xml:space="preserve">
    <value>Disable donation reminder</value>
  </data>
  <data name="sw_tcOutput_DownloadCanvas" xml:space="preserve">
    <value>Use Canvas if available</value>
  </data>
  <data name="WinQueue_NowPlaying" xml:space="preserve">
    <value>Now Playing</value>
  </data>
  <data name="WinQueue_SongRequest" xml:space="preserve">
    <value>Song Request</value>
  </data>
  <data name="WinQueue_Skipping" xml:space="preserve">
    <value>Skipping</value>
  </data>
  <data name="WinQueue_Actions" xml:space="preserve">
    <value>Actions</value>
  </data>
  <data name="sw_YTMDesktop_disclaimer" xml:space="preserve">
    <value>Compare the codes between Songify and the YouTube Music Desktop player. Only accept the integration request if the codes match!</value>
  </data>
  <data name="mw_menu_Twitch_dw" xml:space="preserve">
    <value>Doesn't work?</value>
  </data>
  <data name="sw_tcOutput_pause" xml:space="preserve">
    <value>What to do on pause?</value>
  </data>
  <data name="mw_menu_Widget_disclaimer" xml:space="preserve">
    <value>The widget only works if "Upload Song Info" is enabled. You can find this option under Settings -&gt; Output. Do you want to activate it now?</value>
  </data>
  <data name="s_Connected" xml:space="preserve">
    <value>Connected</value>
    <comment>The word "Connected"</comment>
  </data>
  <data name="s_Disconnected" xml:space="preserve">
    <value>Disconnected</value>
    <comment>The word "Disconnected"</comment>
  </data>
  <data name="Window_Queue_QueueId" xml:space="preserve">
    <value>QueueId</value>
  </data>
  <data name="mw_clearQueueDisclaimer" xml:space="preserve">
    <value>Do you really want to clear the queue?</value>
  </data>
  <data name="s_Warning" xml:space="preserve">
    <value>Warning</value>
    <comment>The word "Warning"</comment>
  </data>
  <data name="s_Song" xml:space="preserve">
    <value>Song</value>
    <comment>The word "Song"</comment>
  </data>
  <data name="bw_lblBlockedSongs" xml:space="preserve">
    <value>Blocked Songs</value>
  </data>
  <data name="sw_SpotifySr_UserLevelsCommand" xml:space="preserve">
    <value>User Levels (Command)</value>
  </data>
  <data name="s_Viewer" xml:space="preserve">
    <value>Viewer</value>
  </data>
  <data name="s_Follower" xml:space="preserve">
    <value>Follower</value>
  </data>
  <data name="s_Subscriber" xml:space="preserve">
    <value>Subscriber</value>
  </data>
  <data name="s_VIP" xml:space="preserve">
    <value>VIP</value>
  </data>
  <data name="s_Moderator" xml:space="preserve">
    <value>Moderator</value>
  </data>
  <data name="sw_SpotifySr_UserLevelsReward" xml:space="preserve">
    <value>User Levels (Reward)</value>
  </data>
  <data name="UC_BotResponses_CommandResponses" xml:space="preserve">
    <value>Command Responses</value>
  </data>
  <data name="UC_BotResponses_SongRequestResponses" xml:space="preserve">
    <value>Song Request Responses</value>
  </data>
  <data name="s_TrackAdded" xml:space="preserve">
    <value>Track has been added to the queue.</value>
  </data>
  <data name="s_FillClientIdAndSecret" xml:space="preserve">
    <value>Please enter the Spotify client ID and Secret</value>
  </data>
  <data name="s_OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="brw_UserLevelTooLowCommand" xml:space="preserve">
    <value>Userlevel is too low for !ssr command</value>
  </data>
  <data name="brw_UserLevelTooLowReward" xml:space="preserve">
    <value>Userlevel is too low for song request reward</value>
  </data>
  <data name="sw_tcCommands_ShowUserLevelBadges" xml:space="preserve">
    <value>Show user level badges</value>
  </data>
  <data name="s_Columns" xml:space="preserve">
    <value>Columns</value>
    <comment>The word "Columns"</comment>
  </data>
  <data name="brw_cmd_queue" xml:space="preserve">
    <value>Returns the first 5 songs of the current playback queue</value>
  </data>
  <data name="brw_cmd_pause" xml:space="preserve">
    <value>Pauses the current playback.</value>
  </data>
  <data name="brw_cmd_commands" xml:space="preserve">
    <value>Returns all active Songify commands.</value>
  </data>
  <data name="Param_User_Desc" xml:space="preserve">
    <value>The user who triggered the command or channel reward</value>
  </data>
  <data name="Param_Requester_Desc" xml:space="preserve">
    <value>The requester of the current song</value>
  </data>
  <data name="Param_ConditionalText_Desc" xml:space="preserve">
    <value>The text inside of '{{' and '}}' will only be posted if the current song is a song request</value>
  </data>
  <data name="Param_Artist_Desc" xml:space="preserve">
    <value>Artists for the current song or song request</value>
  </data>
  <data name="Param_SingleArtist_Desc" xml:space="preserve">
    <value>Main artist for the current song or song request</value>
  </data>
  <data name="Param_ErrorMessage_Desc" xml:space="preserve">
    <value>Error message if an error occurs</value>
  </data>
  <data name="Param_MaxLength_Desc" xml:space="preserve">
    <value>Max song length in minutes</value>
  </data>
  <data name="Param_MaxRequests_Desc" xml:space="preserve">
    <value>Max requests per user</value>
  </data>
  <data name="Param_SongFormat_Desc" xml:space="preserve">
    <value>{Artist} - {Title}</value>
  </data>
  <data name="Param_PlaylistName_Desc" xml:space="preserve">
    <value>Name of the playlist</value>
  </data>
  <data name="Param_PlaylistUrl_Desc" xml:space="preserve">
    <value>URL of the playlist</value>
  </data>
  <data name="Param_SongList_Desc" xml:space="preserve">
    <value>For !pos command only, creates a list of songs that the user has in the queue with their position</value>
  </data>
  <data name="Param_Votes_Desc" xml:space="preserve">
    <value>Number of votes for voteskip votes/total</value>
  </data>
  <data name="Param_Cooldown_Desc" xml:space="preserve">
    <value>The cooldown in seconds (for global cd and user cd)</value>
  </data>
  <data name="Param_Url_Desc" xml:space="preserve">
    <value>Spotify song URL</value>
  </data>
  <data name="Param_Queue_Desc" xml:space="preserve">
    <value>Next 5 songs in the queue</value>
  </data>
  <data name="Param_Commands_Desc" xml:space="preserve">
    <value>List of all active commands</value>
  </data>
  <data name="s_Copied" xml:space="preserve">
    <value>Copied</value>
    <comment>The word "Copied"</comment>
  </data>
  <data name="sw_ResponseVariables" xml:space="preserve">
    <value>Response Variables</value>
  </data>
  <data name="lang_beBY" xml:space="preserve">
    <value>Belarusian</value>
  </data>
  <data name="Param_Userlevel_Desc" xml:space="preserve">
    <value>The users userlevel (Folower, Subscriber etc)</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="songify" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\songify.ico;System.Drawing.Icon, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="Param_TimeToPlay_Desc" xml:space="preserve">
    <value>The time in mm:ss when the song request will play.</value>
  </data>
  <data name="brw_cmd_bansong" xml:space="preserve">
    <value>Adds the current song to the blocklist and skips it.</value>
  </data>
  <data name="brw_SongBlocked" xml:space="preserve">
    <value>Song is blocked</value>
  </data>
  <data name="sw_SpotifySR_AddOnlyToPlaylist" xml:space="preserve">
    <value>Add requests only to the selected playlist</value>
  </data>
  <data name="sw_SpotifySR_EnableSrForBits" xml:space="preserve">
    <value>Enable Song Requests for Bits</value>
  </data>
</root>