<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="brw_ArtistBlocked" xml:space="preserve">
    <value>Künstler Blockiert</value>
  </data>
  <data name="brw_FetchError" xml:space="preserve">
    <value>Fehler beim Holen der Songinformation</value>
  </data>
  <data name="brw_Header" xml:space="preserve">
    <value>Konfiguriere die Antworten des Chatbots:</value>
  </data>
  <data name="brw_MaxSongs" xml:space="preserve">
    <value>Maximale Anzahl an Songs erreicht</value>
  </data>
  <data name="brw_NoSong" xml:space="preserve">
    <value>Kein Song wurde gewünscht (leerer Request)</value>
  </data>
  <data name="brw_SongInQueue" xml:space="preserve">
    <value>Song bereits in der Warteschlange</value>
  </data>
  <data name="brw_SongTooLong" xml:space="preserve">
    <value>Lied ist zu lang</value>
  </data>
  <data name="bw_btnAdd" xml:space="preserve">
    <value>Hinzufügen</value>
  </data>
  <data name="bw_btnClear" xml:space="preserve">
    <value>Leeren</value>
  </data>
  <data name="bw_cbArtist" xml:space="preserve">
    <value>Künstler</value>
  </data>
  <data name="bw_cbUser" xml:space="preserve">
    <value>Benutzer</value>
  </data>
  <data name="bw_lblBlockedArtists" xml:space="preserve">
    <value>Blockierte Künstler</value>
  </data>
  <data name="bw_lblBlockedUsers" xml:space="preserve">
    <value>Blockierte Benutzer</value>
  </data>
  <data name="bw_menu_Delete" xml:space="preserve">
    <value>Löschen</value>
  </data>
  <data name="lang_deDE" xml:space="preserve">
    <value>Deutsch</value>
  </data>
  <data name="lang_en" xml:space="preserve">
    <value>Englisch</value>
  </data>
  <data name="mw_menu_Blacklist" xml:space="preserve">
    <value>Blockliste</value>
  </data>
  <data name="mw_menu_Connect" xml:space="preserve">
    <value>Verbinden</value>
  </data>
  <data name="mw_menu_Disconnect" xml:space="preserve">
    <value>Trennen</value>
  </data>
  <data name="mw_menu_Exit" xml:space="preserve">
    <value>Beenden</value>
  </data>
  <data name="mw_menu_File" xml:space="preserve">
    <value>Datei</value>
  </data>
  <data name="mw_menu_Help" xml:space="preserve">
    <value>Hilfe</value>
  </data>
  <data name="mw_menu_Help_About" xml:space="preserve">
    <value>Über</value>
  </data>
  <data name="mw_menu_History" xml:space="preserve">
    <value>Historie</value>
  </data>
  <data name="mw_menu_History_Browser" xml:space="preserve">
    <value>Historie Browser</value>
  </data>
  <data name="mw_menu_History_Window" xml:space="preserve">
    <value>Historiefenster</value>
  </data>
  <data name="mw_menu_Queue" xml:space="preserve">
    <value>Warteschlange</value>
  </data>
  <data name="mw_menu_Queue_Browser" xml:space="preserve">
    <value>Warteschlange - Browser</value>
  </data>
  <data name="mw_menu_Queue_Clear" xml:space="preserve">
    <value>Warteschlange leeren</value>
  </data>
  <data name="mw_menu_Queue_Window" xml:space="preserve">
    <value>Warteschlange - Fenster</value>
  </data>
  <data name="mw_menu_Settings" xml:space="preserve">
    <value>Einstellungen</value>
  </data>
  <data name="mw_menu_Support" xml:space="preserve">
    <value>Unterstütze Uns</value>
  </data>
  <data name="mw_menu_Widget" xml:space="preserve">
    <value>Widget</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="sw_Appearance_Color" xml:space="preserve">
    <value>Farbe:</value>
  </data>
  <data name="sw_Appearance_ThemeDark" xml:space="preserve">
    <value>Dunkles Thema</value>
  </data>
  <data name="sw_Appearance_ThemeLight" xml:space="preserve">
    <value>Helles Thema</value>
  </data>
  <data name="sw_Config_Export" xml:space="preserve">
    <value>Exportieren</value>
  </data>
  <data name="sw_Config_Import" xml:space="preserve">
    <value>Importieren</value>
  </data>
  <data name="sw_Integration_Autoconnect" xml:space="preserve">
    <value>Autom. verbinden</value>
  </data>
  <data name="sw_Integration_btnLink" xml:space="preserve">
    <value>Verknüpfen</value>
  </data>
  <data name="sw_Integration_ConfigureResponses" xml:space="preserve">
    <value>Konfiguriere Bot-Antworten &amp; Befehle</value>
  </data>
  <data name="sw_Integration_NBWatermark" xml:space="preserve">
    <value>NB Benutzernamen (Twitch Benutzername)</value>
  </data>
  <data name="sw_Integration_SpotifyLinked" xml:space="preserve">
    <value>Verknüpftes Konto:</value>
  </data>
  <data name="sw_Integration_TwitchChWatermark" xml:space="preserve">
    <value>Channel</value>
  </data>
  <data name="sw_SpotifySR_ChannelPoints" xml:space="preserve">
    <value>Kanalpunkte Belohnungs-ID</value>
  </data>
  <data name="sw_SpotifySR_ClearQ" xml:space="preserve">
    <value>Warteschlange beim Start leeren</value>
  </data>
  <data name="sw_SpotifySR_MaxLength" xml:space="preserve">
    <value>Maximale Songlänge (in min)</value>
  </data>
  <data name="sw_SpotifySR_MaxReq" xml:space="preserve">
    <value>Max Songwünsche pro Benutzer</value>
  </data>
  <data name="sw_SpotifySR_MessageLogging" xml:space="preserve">
    <value>Aktiviere Nachrichtenlogging</value>
  </data>
  <data name="sw_SpotifySR_SRReward" xml:space="preserve">
    <value>Aktiviere SR (Kanalpunkte)</value>
  </data>
  <data name="sw_tcOutput_AddSpaces" xml:space="preserve">
    <value>Leerzeichen anfügen</value>
  </data>
  <data name="sw_tcOutput_Directory" xml:space="preserve">
    <value>Ausgabeordner</value>
  </data>
  <data name="sw_tcOutput_DownloadAlbum" xml:space="preserve">
    <value>Albumcover Download (nur über API)</value>
  </data>
  <data name="sw_tcOutput_Format" xml:space="preserve">
    <value>Ausgabeformat (Textdatei &amp; Widget)</value>
  </data>
  <data name="sw_tcOutput_PauseText" xml:space="preserve">
    <value>Pause Text</value>
  </data>
  <data name="sw_tcOutput_PauseWatermark" xml:space="preserve">
    <value>Eigener Pause-Text (leer für leere Textdatei)</value>
  </data>
  <data name="sw_tcOutput_UploadSongInfo" xml:space="preserve">
    <value>Songinfo hochladen</value>
  </data>
  <data name="sw_tcSpotify_SaveButton" xml:space="preserve">
    <value>Speichern</value>
  </data>
  <data name="sw_tcSpotify_UseOwnApp" xml:space="preserve">
    <value>Songifys Spotify-API Zugang nutzen</value>
  </data>
  <data name="sw_tcSystem_Autostart" xml:space="preserve">
    <value>Mit Windows starten</value>
  </data>
  <data name="sw_tcSystem_Behavior" xml:space="preserve">
    <value>Verhalten</value>
  </data>
  <data name="sw_tcSystem_CheckButton" xml:space="preserve">
    <value>Auf Updates prüfen</value>
  </data>
  <data name="sw_tcSystem_ChromeFetchRate" xml:space="preserve">
    <value>Chrome Abholrate (Sekunden)</value>
  </data>
  <data name="sw_tcSystem_Minimize" xml:space="preserve">
    <value>Ins Tray minimieren</value>
  </data>
  <data name="sw_tcSystem_SendAnonData" xml:space="preserve">
    <value>Anonyme Daten senden</value>
  </data>
  <data name="sw_tcSystem_Telemetry" xml:space="preserve">
    <value>Telemetrie</value>
  </data>
  <data name="sw_tc_Appearance" xml:space="preserve">
    <value>Aussehen</value>
  </data>
  <data name="sw_tc_Config" xml:space="preserve">
    <value>Konfiguration</value>
  </data>
  <data name="sw_tc_Integration" xml:space="preserve">
    <value>Twitch</value>
  </data>
  <data name="sw_tc_Output" xml:space="preserve">
    <value>Ausgabe</value>
  </data>
  <data name="sw_tc_System" xml:space="preserve">
    <value>Allgemein</value>
  </data>
  <data name="lang_ru" xml:space="preserve">
    <value>Russisch</value>
  </data>
  <data name="sw_tcSpotify_UseSongifyApp" xml:space="preserve">
    <value>Eigene Spotify API-Daten nutzen</value>
  </data>
  <data name="mw_menu_Twitch_Bot" xml:space="preserve">
    <value>Botkonfiguration</value>
  </data>
  <data name="lang_es" xml:space="preserve">
    <value>Spanisch</value>
  </data>
  <data name="lang_fr" xml:space="preserve">
    <value>Französisch</value>
  </data>
  <data name="sw_tcSystem_translated" xml:space="preserve">
    <value>(übersetzt mit DeepL)</value>
  </data>
  <data name="brw_cmd_next" xml:space="preserve">
    <value>Zeigt das nächste Lied in der Warteschlange an</value>
  </data>
  <data name="brw_cmd_off" xml:space="preserve">
    <value>Aus</value>
  </data>
  <data name="brw_cmd_on" xml:space="preserve">
    <value>Ein</value>
  </data>
  <data name="brw_cmd_pos" xml:space="preserve">
    <value>Zeigt die Position der Songanfragen in der Warteschlange für den aktuellen Benutzer an</value>
  </data>
  <data name="brw_cmd_song" xml:space="preserve">
    <value>Zeigt den aktuellen Song an</value>
  </data>
  <data name="brw_cmd_description" xml:space="preserve">
    <value>Beschreibung</value>
  </data>
  <data name="brw_cmd_enabled" xml:space="preserve">
    <value>Aktiviert</value>
  </data>
  <data name="brw_cmd_trigger" xml:space="preserve">
    <value>Auslöser</value>
  </data>
  <data name="sw_tcOutput_Format2" xml:space="preserve">
    <value>Ausgabeformat (Twitch Chat)</value>
  </data>
  <data name="crw_CreateReward" xml:space="preserve">
    <value>Kanalpunktebelohnung erstellen</value>
  </data>
  <data name="crw_CreateRewardError" xml:space="preserve">
    <value>Fehler beim Erstellen der Belohnung. Bitte stelle sicher, dass der Name für die Belohung nicht schon genutzt wird.</value>
  </data>
  <data name="crw_RewardTitle" xml:space="preserve">
    <value>Titel</value>
  </data>
  <data name="crw_RewardPrompt" xml:space="preserve">
    <value>Prompt</value>
  </data>
  <data name="crw_RewardCost" xml:space="preserve">
    <value>Kosten</value>
  </data>
  <data name="crw_CreateRewardSuccess" xml:space="preserve">
    <value>Die Belohnung "{name}" wurde erstellt.</value>
  </data>
  <data name="mw_menu_PatchNotes" xml:space="preserve">
    <value>Update Informationen</value>
  </data>
  <data name="mw_menu_Help_LogFolder" xml:space="preserve">
    <value>Log-Ordner</value>
  </data>
  <data name="mw_menu_Twitch_TwitchLogin" xml:space="preserve">
    <value>Twitch Login</value>
  </data>
  <data name="mw_menu_Console" xml:space="preserve">
    <value>Konsole</value>
  </data>
  <data name="brw_cmd_skip" xml:space="preserve">
    <value>Überspringt den aktuellen Song</value>
  </data>
  <data name="brw_cmd_skipvote" xml:space="preserve">
    <value>Startet eine Abstimmung, um den aktuellen Song zu überspringen</value>
  </data>
  <data name="brw_cmd_skipvotecount" xml:space="preserve">
    <value>Anzahl der benötigten Stimmen</value>
  </data>
  <data name="sw_WebServer_Port" xml:space="preserve">
    <value>Webserver-Port</value>
  </data>
  <data name="sw_WebServer_StartWebServer" xml:space="preserve">
    <value>Webserver starten</value>
  </data>
  <data name="sw_WebServer_OpenWebsite" xml:space="preserve">
    <value>Webseite öffnen</value>
  </data>
  <data name="Sw_Integration_RefundSongAdded" xml:space="preserve">
    <value>Song wurde zur Warteschlange hinzugefügt</value>
  </data>
  <data name="Sw_Integration_RefundNoSongFound" xml:space="preserve">
    <value>Es wurde kein Lied gefunden</value>
  </data>
  <data name="Sw_Integration_RefundAlways" xml:space="preserve">
    <value>immer (SR frei machen)</value>
  </data>
  <data name="Sw_System_OpenQueueOnStartup" xml:space="preserve">
    <value>Warteschlangenfenster beim Start öffnen</value>
  </data>
  <data name="Sw_Integration_OnlyWorkWhenLive" xml:space="preserve">
    <value>Funktion auf Live-status limitieren. (Funktioniert mit Login über Twitch)</value>
  </data>
  <data name="Sw_Integration_ManageRewards" xml:space="preserve">
    <value>Twitch Belohnungen verwalten</value>
  </data>
  <data name="Sw_Integration_MaxSrUser" xml:space="preserve">
    <value>Max SR / Benutzer (basierend vom Level)</value>
  </data>
  <data name="Sw_Integration_RefundOn" xml:space="preserve">
    <value>Rückerstattung wenn</value>
  </data>
  <data name="Sw_Integration_RefundUserLevelLow" xml:space="preserve">
    <value>Benutzerlevel ist zu niedrig</value>
  </data>
  <data name="Sw_Integration_RefundUSerBlocked" xml:space="preserve">
    <value>Der Benutzer ist für SR gesperrt</value>
  </data>
  <data name="Sw_Integration_RefundSpotifyNotConnected" xml:space="preserve">
    <value>Spotify ist nicht verbunden</value>
  </data>
  <data name="Sw_Integration_RefundSongNotAvailable" xml:space="preserve">
    <value>Das Lied ist in der Region nicht verfügbar</value>
  </data>
  <data name="Sw_Integration_RefundArtistBlocked" xml:space="preserve">
    <value>Song enthält blockierte Interpreten</value>
  </data>
  <data name="Sw_Integration_RefundSongTooLong" xml:space="preserve">
    <value>Der Song ist zu lang</value>
  </data>
  <data name="Sw_Integration_RefundSongAlreadyInQueue" xml:space="preserve">
    <value>Das Lied befindet sich bereits in der Warteschlange</value>
  </data>
  <data name="Sw_System_Privacy" xml:space="preserve">
    <value>Kontonamen und Profilbilder ausblenden</value>
  </data>
  <data name="Sw_Integtation_Tc_Accounts" xml:space="preserve">
    <value>Konten</value>
  </data>
  <data name="Sw_Integtation_Tc_Rewards" xml:space="preserve">
    <value>Belohnung</value>
  </data>
  <data name="Sw_Integtation_Tc_SongRequests" xml:space="preserve">
    <value>Songwünsche</value>
  </data>
  <data name="mw_menu_Twitch_TwitchLoggedIn" xml:space="preserve">
    <value>Mit Twitch eingeloggt</value>
  </data>
  <data name="Sw_SpotifySR_UnlimitedSRs" xml:space="preserve">
    <value>unbegrenzte Songwünsche</value>
  </data>
  <data name="mw_menu_SongRequests" xml:space="preserve">
    <value>Songwünsche</value>
  </data>
  <data name="mw_menu_View" xml:space="preserve">
    <value>Anzeige</value>
  </data>
  <data name="mw_LiveOutputPlaceholder" xml:space="preserve">
    <value>Künstler - Titel</value>
  </data>
  <data name="mw_menu_Twitch_CheckOnlineStatus" xml:space="preserve">
    <value>Live-Status prüfen</value>
  </data>
  <data name="WinTitle_Queue" xml:space="preserve">
    <value>Song-Warteschlange</value>
  </data>
  <data name="s_Length" xml:space="preserve">
    <value>Länge</value>
  </data>
  <data name="s_Requester" xml:space="preserve">
    <value>von</value>
  </data>
  <data name="WinTitle_Blocklist" xml:space="preserve">
    <value>Blockliste</value>
  </data>
  <data name="WinTitle_History" xml:space="preserve">
    <value>Song Historie</value>
  </data>
  <data name="Sw_System_PrivacyHeader" xml:space="preserve">
    <value>Privatsphäre</value>
  </data>
  <data name="sw_tc_WebServer" xml:space="preserve">
    <value>Webserver</value>
  </data>
  <data name="sw_WebServer_AutoStart" xml:space="preserve">
    <value>Webserver automatisch starten</value>
  </data>
  <data name="sw_Config_ResetConfig" xml:space="preserve">
    <value>Konfiguration zurücksetzen</value>
  </data>
  <data name="sw_WebServer_StopWebServer" xml:space="preserve">
    <value>Webserver stoppen</value>
  </data>
  <data name="sw_Config_GetBetaUpdates" xml:space="preserve">
    <value>Beta-Updates erhalten</value>
  </data>
  <data name="mw_LiveOutputLinkSpotify" xml:space="preserve">
    <value>Bitte verknüpfen Sie Ihr Spotify-Konto. Einstellungen -&gt; Spotify</value>
  </data>
  <data name="s_Save" xml:space="preserve">
    <value>Speichern</value>
  </data>
  <data name="s_Upload" xml:space="preserve">
    <value>Hochladen</value>
  </data>
  <data name="s_Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="s_Time" xml:space="preserve">
    <value>Zeit</value>
  </data>
  <data name="sw_Twitch_Rewards_CreateNewReward" xml:space="preserve">
    <value>Neue Belohnung erstellen</value>
  </data>
  <data name="brw_ModSkip" xml:space="preserve">
    <value>Streamer / Moderator / Requester hat das Lied übersprungen</value>
  </data>
  <data name="brw_Pos" xml:space="preserve">
    <value>Antwort auf den Befehl !pos</value>
  </data>
  <data name="brw_Next" xml:space="preserve">
    <value>Antwort auf den Befehl !next</value>
  </data>
  <data name="WinTitle_BotResponsesCommands" xml:space="preserve">
    <value>Bot-Antworten und -Befehle</value>
  </data>
  <data name="brw_tc_Responses" xml:space="preserve">
    <value>Antworten</value>
  </data>
  <data name="brw_tc_Commands" xml:space="preserve">
    <value>Befehle</value>
  </data>
  <data name="brw_VoteSkip" xml:space="preserve">
    <value>Der Benutzer hat dafür gestimmt, den aktuellen Song zu überspringen</value>
  </data>
  <data name="sw_Spotify_RewardSR" xml:space="preserve">
    <value>Belohnung für Songanfragen</value>
  </data>
  <data name="sw_Spotify_RewardSkip" xml:space="preserve">
    <value>Belohnung für Song-Skip</value>
  </data>
  <data name="sw_SpotifySR_SsrMovedToBotConfig" xml:space="preserve">
    <value>!ssr wurde in die Bot-Konfiguration verschoben</value>
  </data>
  <data name="Sw_Integration_MinUserLevel" xml:space="preserve">
    <value>Für SR erforderliches Mindestbenutzerlevel</value>
  </data>
  <data name="sw_Integration_Twitch" xml:space="preserve">
    <value>Twitch-Konto</value>
  </data>
  <data name="sw_Twitch_LogOut" xml:space="preserve">
    <value>Ausloggen</value>
  </data>
  <data name="sw_Integration_RefundDisclaimer" xml:space="preserve">
    <value>Um Punkte erstatten zu können, muss die Belohnung über Songify erstellt werden. Wähle eine Prämie aus die von Songify verwaltet werden kann oder erstelle eine neue.</value>
  </data>
  <data name="msgbx_BotAccount" xml:space="preserve">
    <value>Bot-Konto</value>
  </data>
  <data name="msgbx_UseAsBotAccount" xml:space="preserve">
    <value>Erfolgreich mit {account} verknüpft. Möchten Sie dieses Konto auch als Chatbot verwenden?</value>
  </data>
  <data name="msgbx_Yes" xml:space="preserve">
    <value>Ja</value>
  </data>
  <data name="msgbx_No" xml:space="preserve">
    <value>Nein</value>
  </data>
  <data name="Sw_Integration_StreamNotLifeNotification" xml:space="preserve">
    <value>Sende Offline-Benachrichtigung an den Chat</value>
  </data>
  <data name="brw_Song" xml:space="preserve">
    <value>Antwort auf den Befehl !song</value>
  </data>
  <data name="brw_Refund" xml:space="preserve">
    <value>Text, welcher der Antwort hinzugefügt wird, wenn Punkte zurückerstattet werden</value>
  </data>
  <data name="sw_tcSystem_lblLanguage" xml:space="preserve">
    <value>Sprache</value>
  </data>
  <data name="brw_cmd_remove" xml:space="preserve">
    <value>Entfernt den letzten Musikwunsch des Benutzers.</value>
  </data>
  <data name="brw_SongLike" xml:space="preserve">
    <value>Antwort auf den Befehl !songlike</value>
  </data>
  <data name="brw_cmd_songlike" xml:space="preserve">
    <value>Fügt den aktuellen Titel der in der Spotify-Konfiguration ausgewählten Playlist hinzu.</value>
  </data>
  <data name="sw_SpotifySR_Userlevel_command" xml:space="preserve">
    <value>Userlevel für SR-Befehl</value>
  </data>
  <data name="sw_SpotifySR_Userlevel_reward" xml:space="preserve">
    <value>Userlevel für SR-Kanalbelohnung</value>
  </data>
  <data name="sw_tcSpotify_SongLikeLabel" xml:space="preserve">
    <value>Liked-Songs Playlist</value>
  </data>
  <data name="sw_tcSpotify_SongLikeLabelTooltip" xml:space="preserve">
    <value>Die Playlist, der Songs hinzugefügt werden, wenn der Befehl !songlike verwendet wird, oder mit der Option, Songs automatisch zur Wiedergabeliste hinzuzufügen.</value>
  </data>
  <data name="sw_tc_Spotify_AddSongsToPlaylist" xml:space="preserve">
    <value>Füge alle Musikwünsche zur Playlist hinzu</value>
  </data>
  <data name="brw_SongNotFoundInPlaylist" xml:space="preserve">
    <value>Antwort, wenn das Lied nicht in der Wiedergabeliste der zulässigen Lieder gefunden wurde</value>
  </data>
  <data name="brw_Remove" xml:space="preserve">
    <value>Antwort für den Befehl !remove</value>
  </data>
  <data name="sw_tcOutput_SplitArtist" xml:space="preserve">
    <value>Künstler, Titel und Anforderer aufteilen</value>
  </data>
  <data name="lang_pt" xml:space="preserve">
    <value>Portugiesisch</value>
  </data>
  <data name="lang_pl" xml:space="preserve">
    <value>Polnisch</value>
  </data>
  <data name="sw_Integration_ShowCreds" xml:space="preserve">
    <value>Anmeldeinformationen anzeigen</value>
  </data>
  <data name="sw_tc_Spotify_OnlyAllowFromPlaylist" xml:space="preserve">
    <value>Nur Lieder aus dieser Playlist zulassen (SR)</value>
  </data>
  <data name="sw_SpotifySR_BlockAllExplicit" xml:space="preserve">
    <value>Blockiere alle expliziten Lieder</value>
  </data>
  <data name="brw_ExplicitSongs" xml:space="preserve">
    <value>Antwort wenn ein expliziter Song angefordert wurde und „Explizite Songs blockieren“ aktiviert ist</value>
  </data>
  <data name="sw_tcOutput_RequesterPrefix" xml:space="preserve">
    <value>Anforderer-Textpräfix</value>
  </data>
  <data name="lang_it" xml:space="preserve">
    <value>Italienisch</value>
  </data>
  <data name="sw_tcSystem_UseDefaultBrowser" xml:space="preserve">
    <value>Standard-Webbrowser verwenden</value>
  </data>
  <data name="brw_CommandOnCooldown" xml:space="preserve">
    <value>Antwort, wenn der SR-Befehl auf Cooldown ist</value>
  </data>
  <data name="brw_NoTrackFound" xml:space="preserve">
    <value>Antwort, wenn kein Track gefunden wurde</value>
  </data>
  <data name="brw_cmd_vol" xml:space="preserve">
    <value>Gibt die aktuelle Lautstärke zurück oder stellt sie ein. '!vol [0-100]'</value>
  </data>
  <data name="sw_SpotifySR_SRCommand" xml:space="preserve">
    <value>Befehl zum Senden von Songwünschen. (Befehl + Spotify-Link oder Künstler - Titel)</value>
  </data>
  <data name="lang_br" xml:space="preserve">
    <value>Brasilianisches Portugiesisch</value>
  </data>
  <data name="mw_menu_BuyUsACoffee" xml:space="preserve">
    <value>Unterstütz uns auf Ko-Fi!</value>
  </data>
  <data name="brw_cmd_volIgnoreMod" xml:space="preserve">
    <value>Broadcaster-/Moderator-Check ignorieren</value>
  </data>
  <data name="mw_menu_CheckUpdates" xml:space="preserve">
    <value>Nach Updates suchen</value>
  </data>
  <data name="sw_tcOutput_ApplyToSplitFilesToo" xml:space="preserve">
    <value>Auch auf geteilte Dateien anwenden</value>
  </data>
  <data name="sw_tcOutput_onPause_DoNothing" xml:space="preserve">
    <value>Nichts tun</value>
  </data>
  <data name="sw_tcOutput_onPause_UseCustomPauseText" xml:space="preserve">
    <value>Benutzerdefinierten Pausentext verwenden</value>
  </data>
  <data name="sw_tcOutput_onPause_ClearAllOutput" xml:space="preserve">
    <value>Gesamte Ausgabe löschen</value>
  </data>
  <data name="sw_rewards_ClickReminder" xml:space="preserve">
    <value>Klicke hier, nachdem die Belohnung ausgewählt wurde</value>
  </data>
  <data name="sw_rewards_enabledRewards" xml:space="preserve">
    <value>Aktivierte Kanal-Belohnungen für Songanfragen</value>
  </data>
  <data name="brw_cmd_QueueReturn" xml:space="preserve">
    <value>Gibt die ersten 5 Songs der aktuellen Wiedergabewarteschlange zurück</value>
  </data>
  <data name="sw_SpotifySR_CommandCD" xml:space="preserve">
    <value>Allgemeine Command Abklingzeit (Sekunden)</value>
  </data>
  <data name="sw_SpotifySR_CommandCDUser" xml:space="preserve">
    <value>Abklingzeit für SR-Befehle (pro Benutzer)</value>
  </data>
  <data name="brw_CommandOnUserCooldown" xml:space="preserve">
    <value>Antwort, wenn der Benutzer im Cooldown ist (Benutzer-spezifischer Cooldown für den Songrequest-Befehl)</value>
  </data>
  <data name="Sw_System_DisableDonationReminder" xml:space="preserve">
    <value>Spendenerinnerung deaktivieren</value>
  </data>
  <data name="sw_tcOutput_DownloadCanvas" xml:space="preserve">
    <value>Verwende Canvas, falls verfügbar</value>
  </data>
  <data name="WinQueue_NowPlaying" xml:space="preserve">
    <value>Jetzt läuft</value>
  </data>
  <data name="WinQueue_SongRequest" xml:space="preserve">
    <value>Songwunsch</value>
  </data>
  <data name="WinQueue_Skipping" xml:space="preserve">
    <value>Überspringen</value>
  </data>
  <data name="WinQueue_Actions" xml:space="preserve">
    <value>Aktionen</value>
  </data>
  <data name="sw_YTMDesktop_disclaimer" xml:space="preserve">
    <value>Vergleichen Sie die Codes zwischen Songify und dem YouTube Music Desktop-Player. Akzeptieren Sie die Integrationsanfrage nur, wenn die Codes übereinstimmen!</value>
  </data>
  <data name="mw_menu_Twitch_dw" xml:space="preserve">
    <value>Funktioniert nicht?</value>
  </data>
  <data name="sw_tcOutput_pause" xml:space="preserve">
    <value>Was tun wenn Pausiert?</value>
  </data>
  <data name="mw_menu_Widget_disclaimer" xml:space="preserve">
    <value>Das Widget funktioniert nur, wenn „Songinfo hochladen“ aktiviert ist. Diese Option findest du unter Einstellungen -&gt; Ausgabe. Möchtest du sie jetzt aktivieren?</value>
  </data>
  <data name="s_Connected" xml:space="preserve">
    <value>Verbunden</value>
  </data>
  <data name="s_Disconnected" xml:space="preserve">
    <value>Getrennt</value>
  </data>
  <data name="Window_Queue_QueueId" xml:space="preserve">
    <value>Warteschlangen-ID</value>
  </data>
  <data name="mw_clearQueueDisclaimer" xml:space="preserve">
    <value>Möchten Sie die Warteschlange wirklich löschen?</value>
  </data>
  <data name="s_Warning" xml:space="preserve">
    <value>Warnung</value>
  </data>
  <data name="s_Song" xml:space="preserve">
    <value>Lied</value>
  </data>
  <data name="bw_lblBlockedSongs" xml:space="preserve">
    <value>Blockierte Lieder</value>
  </data>
  <data name="sw_SpotifySr_UserLevelsCommand" xml:space="preserve">
    <value>Benutzerlevel (Befehl)</value>
  </data>
  <data name="s_Viewer" xml:space="preserve">
    <value>Zuschauer</value>
  </data>
  <data name="s_Follower" xml:space="preserve">
    <value>Follower</value>
  </data>
  <data name="s_Subscriber" xml:space="preserve">
    <value>Abonnent</value>
  </data>
  <data name="s_VIP" xml:space="preserve">
    <value>VIP</value>
  </data>
  <data name="s_Moderator" xml:space="preserve">
    <value>Moderator</value>
  </data>
  <data name="sw_SpotifySr_UserLevelsReward" xml:space="preserve">
    <value>Benutzerlevel (Belohnung)</value>
  </data>
  <data name="UC_BotResponses_CommandResponses" xml:space="preserve">
    <value>Befehlsantworten</value>
  </data>
  <data name="UC_BotResponses_SongRequestResponses" xml:space="preserve">
    <value>Antworten auf Songanfragen</value>
  </data>
  <data name="s_TrackAdded" xml:space="preserve">
    <value>Der Titel wurde zur Warteschlange hinzugefügt.</value>
  </data>
  <data name="s_FillClientIdAndSecret" xml:space="preserve">
    <value>Bitte geben Sie die Spotify-Client-ID und das Secret ein</value>
  </data>
  <data name="s_OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="brw_UserLevelTooLowCommand" xml:space="preserve">
    <value>Das Benutzerlevel ist zu niedrig für den Befehl !ssr</value>
  </data>
  <data name="brw_UserLevelTooLowReward" xml:space="preserve">
    <value>Das Benutzerlevel ist für die Belohnung für Songwünsche zu niedrig</value>
  </data>
  <data name="sw_tcCommands_ShowUserLevelBadges" xml:space="preserve">
    <value>Benutzerlevel-Abzeichen anzeigen</value>
  </data>
  <data name="s_Columns" xml:space="preserve">
    <value>Spalten</value>
  </data>
  <data name="brw_cmd_play" xml:space="preserve">
    <value>Setzt die aktuelle Wiedergabe fort.</value>
  </data>
  <data name="brw_cmd_queue" xml:space="preserve">
    <value>Gibt die ersten 5 Songs der aktuellen Wiedergabewarteschlange zurück</value>
  </data>
  <data name="brw_cmd_pause" xml:space="preserve">
    <value>Pausiert die aktuelle Wiedergabe.</value>
  </data>
  <data name="brw_cmd_commands" xml:space="preserve">
    <value>Gibt alle aktiven Songify-Befehle zurück.</value>
  </data>
  <data name="Param_User_Desc" xml:space="preserve">
    <value>Der Benutzer, der den Befehl oder die Kanalbelohnung ausgelöst hat</value>
  </data>
  <data name="Param_Requester_Desc" xml:space="preserve">
    <value>Der Anforderer des aktuellen Liedes</value>
  </data>
  <data name="Param_ConditionalText_Desc" xml:space="preserve">
    <value>Der Text zwischen '{{' und '}}' wird nur gepostet, wenn es sich bei dem aktuellen Song um einen Songwunsch handelt</value>
  </data>
  <data name="Param_Artist_Desc" xml:space="preserve">
    <value>Künstler zum aktuellen Song oder Songwunsch</value>
  </data>
  <data name="Param_SingleArtist_Desc" xml:space="preserve">
    <value>Hauptkünstler für den aktuellen Song oder Songwunsch</value>
  </data>
  <data name="Param_ErrorMessage_Desc" xml:space="preserve">
    <value>Fehlermeldung, wenn ein Fehler auftritt</value>
  </data>
  <data name="Param_MaxLength_Desc" xml:space="preserve">
    <value>Maximale Songlänge in Minuten</value>
  </data>
  <data name="Param_MaxRequests_Desc" xml:space="preserve">
    <value>Max Songwünsche pro Benutzer</value>
  </data>
  <data name="Param_SongFormat_Desc" xml:space="preserve">
    <value>{Artist} - {Title}</value>
  </data>
  <data name="Param_PlaylistName_Desc" xml:space="preserve">
    <value>Name der Playlist</value>
  </data>
  <data name="Param_PlaylistUrl_Desc" xml:space="preserve">
    <value>URL der Playlist</value>
  </data>
  <data name="Param_SongList_Desc" xml:space="preserve">
    <value>Nur für den Befehl !pos. Erstellt eine Liste der Songs, die der Benutzer in der Warteschlange hat, mit ihrer Position</value>
  </data>
  <data name="Param_Votes_Desc" xml:space="preserve">
    <value>Anzahl der Stimmen für Voteskip-Stimmen/Gesamt</value>
  </data>
  <data name="Param_Cooldown_Desc" xml:space="preserve">
    <value>Der Cooldown in Sekunden (für globale CD und Benutzer-CD)</value>
  </data>
  <data name="Param_Url_Desc" xml:space="preserve">
    <value>Spotify-Song-URL</value>
  </data>
  <data name="Param_Queue_Desc" xml:space="preserve">
    <value>Die nächsten 5 Songs in der Warteschlange</value>
  </data>
  <data name="Param_Commands_Desc" xml:space="preserve">
    <value>Liste aller aktiven Befehle</value>
  </data>
  <data name="s_Copied" xml:space="preserve">
    <value>Kopiert</value>
  </data>
  <data name="sw_ResponseVariables" xml:space="preserve">
    <value>Antwortvariablen</value>
  </data>
  <data name="lang_beBY" xml:space="preserve">
    <value>Weißrussisch</value>
  </data>
  <data name="Param_Userlevel_Desc" xml:space="preserve">
    <value>Die Benutzerebene des Benutzers (Follower, Abonnent usw.)</value>
  </data>
  <data name="Sw_intergration_AutoAnnounce" xml:space="preserve">
    <value>Song automatisch im Chat ankündigen (verwendet die !song Antwort)</value>
  </data>
  <data name="Param_TimeToPlay_Desc" xml:space="preserve">
    <value>Die Zeit in mm:ss, zu der der gewünschte Song abgespielt wird.</value>
  </data>
  <data name="brw_Success" xml:space="preserve">
    <value>Lied erfolgreich hinzugefügt (Befehl und Belohnung)</value>
  </data>
  <data name="brw_cmd_bansong" xml:space="preserve">
    <value>Fügt das aktuelle Lied zur Blockliste hinzu und überspringt es.</value>
  </data>
  <data name="brw_SongBlocked" xml:space="preserve">
    <value>Song ist blockiert</value>
  </data>
  <data name="sw_SpotifySR_AddOnlyToPlaylist" xml:space="preserve">
    <value>Song Requests nur zur ausgewählten Playlist hinzufügen</value>
  </data>
</root>